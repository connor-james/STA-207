remove.packages("sqldf")
knitr::opts_chunk$set(echo = TRUE)
#Required Packages
library("AER")
library("ggplot2")
library("car")
library("dplyr")
library("plotly")
#Prepare Data
data("STAR")
star = data.frame( "gender" = STAR$gender, "ethnicity" = STAR$ethnicity, "star1" = STAR$star1, "math1" = STAR$math1)
star = star[complete.cases(star),] #Eliminate all cases w/ NA
#Check data & objects
#str(star)
star$gender = as.factor(star$gender)
star$ethnicity = as.factor(star$ethnicity)
star$star1 = as.factor(star$star1)
star$lunch1 = as.factor(star$lunch1)
#Check data & objects
#str(star)
star$gender = as.factor(star$gender)
star$ethnicity = as.factor(star$ethnicity)
star$star1 = as.factor(star$star1)
#Set colors for pretty pictures
color2 = c("#FF6868", "#54B7FF")
color3 = c("#FF6868", "#54B7FF", "97FF68")
color4 = c("#FF6868", "#54B7FF", "97FF68", "#A168FF")
color5 = c("#FF6868", "#54B7FF", "97FF68", "#A168FF", "#FFB768")
color5 = c("#FF6868", "#54B7FF", "97FF68", "#A168FF", "#FFB768", "#FFE068")
#NOTE: colors will be assigned to factors in alphabetical order
#Task 1 Summary Statistics:
#NOTE: Please save all figures as objects to be called later in the report
#NOTE: Use plotly package to make everything consistant https://plot.ly/r
summary(star)
#Boxplot of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
#Task 4
#Fitting the model
# Test for variance homogeneity
leveneTest(math1~star1, data = star) #Equal Variacnes
#One-Way ANOVA for STAR1
reg1 = lm(math1~star1, data = star)
summary(reg1)
anova1 = anova(reg1)
anova1
boxplot(star$math1~star$star1)
plot(reg1,2)
plot(reg1)
#Plot of boxplot of math scores broken by class type
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
View(star)
#Task 1 Summary Statistics:
#NOTE: Please save all figures as objects to be called later in the report
#NOTE: Use plotly package to make everything consistant https://plot.ly/r
summary(star)
#Boxplot of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
summary(star)
?STAR
#Task 2 Summary Statistics:
#NOTE: Please save all figures as objects to be called later in the report
#NOTE: Use plotly package to make everything consistant https://plot.ly/r
summary(star)
#Boxplot of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
# Boxplot of star1
boxplot(star$math1~star$star1)
#Task 2 Summary Statistics:
#NOTE: Please save all figures as objects to be called later in the report
#NOTE: Use plotly package to make everything consistant https://plot.ly/r
summary(star)
#Boxplot of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
# Boxplot of star1
boxplot(star$math1~star$star1)
#Piechart of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
pieGender
View(count)
#Task 2 Summary Statistics:
#NOTE: Please save all figures as objects to be called later in the report
#NOTE: Use plotly package to make everything consistant https://plot.ly/r
summary(star)
#Piechart of Gender
count = data.frame(table(star$gender))
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
# Piechart of star1
count2 = data.frame(table(star$star1))
pieStar1 = plot_ly(count2, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieStar1
boxplot(star$math1~star$star1)
pieStar1
?STAR
boxplot(star$math1~star$star1)
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
box1
boxplot(star$math1~star$star1)
box1
summary(star)
pieStar1
count2 = data.frame(table(star$star1))
pieStar1 = plot_ly(count2, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Class Type of 1st Grade")
pieStar1
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
pieStar1
View(count2)
p <- plot_ly(y=count2$Freq, x=count2$Var1, histfunc='sum', type = "histogram") %>%
layout(yaxis=list(type='linear'))
p
p <- plot_ly(y=star$star1, x=star$star1, histfunc='sum', type = "histogram") %>%
layout(yaxis=list(type='linear'))
p
hist(star$star1)
p <- plot_ly(data, x = count2$Var1, y = count2$Freq, type = 'bar', name = 'Bar Graph of the Class Type of 1st Grade') %>%
add_trace(y = count2$Freq, name = 'Class Type') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p <- plot_ly(data, x = star$star1, y = count2$Freq, type = 'bar', name = 'Bar Graph of the Class Type of 1st Grade') %>%
add_trace(y = count2$Freq, name = 'Class Type') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
counts3 <- table(star$star1)
barplot(counts3, main="Distribution of 1st Grade Class Type",
xlab="Class Type")
# Task 2
mean(subset(star, star1 == "small")[["math1"]])
# Task 2
mean(subset(star, star1 == "small")[["math1"]])
mean(subset(star, star1 == "small")[["math1"]])
# Task 2
mean(subset(star, star1 == "small")[["math1"]])
mean(subset(star, star1 == "regular")[["math1"]])
mean(subset(star, star1 == "regular+aide")[["math1"]])
mean(subset(star, star1 == "small")[["math1"]])
mean(subset(star, star1 == "regular")[["math1"]])
mean(subset(star, star1 == "regular+aide")[["math1"]])
var(subset(star, star1 == "small")[["math1"]])
var(subset(star, star1 == "regular")[["math1"]])
var(subset(star, star1 == "regular+aide")[["math1"]])
mean(subset(star, star1 == "small")[["math1"]])
mean(subset(star, star1 == "regular")[["math1"]])
mean(subset(star, star1 == "regular+aide")[["math1"]])
var(subset(star, star1 == "small")[["math1"]])
var(subset(star, star1 == "regular")[["math1"]])
var(subset(star, star1 == "regular+aide")[["math1"]])
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
count2 = data.frame(table(star$star1))
pieStar1 = plot_ly(count2, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Class Type of 1st Grade")
pieStar1
View(STAR)
#Prepare Data
data("STAR")
star = data.frame( "gender" = STAR$gender, "ethnicity" = STAR$ethnicity, "star1" = STAR$star1, "math1" = STAR$math1)
star_k = data.frame( "gender" = STAR$gender, "ethnicity" = STAR$ethnicity, "star.k" = STAR$stark, "math.k" = STAR$mathk)
star = star[complete.cases(star),] #Eliminate all cases w/ NA
star_k = star_k[complete.cases(star_k)]
star_k = data.frame( "gender" = STAR$gender, "ethnicity" = STAR$ethnicity, "star.k" = STAR$stark, "math.k" = STAR$mathk)
View(star_k)
star_k = star_k[complete.cases(star_k)]
star_k = star_k[complete.cases(star_k),]
View(star_k)
View(star_k)
# Task 7
reg2 = lm(math.k~star.k, data = star_k)
anova2 = anova(reg2)
anova2
ounts3 <- table(star$star1)
barplot(counts3, main="Distribution of 1st Grade Class Type",
xlab="Class Type", col=c("darkblue","red","green"), legend = rownames(count3))
counts3 <- table(star$star1)
barplot(counts3, main="Distribution of 1st Grade Class Type",
xlab="Class Type", col=c("darkblue","red","green"), legend = rownames(counts3))
counts3 <- table(star$star1)
barplot(counts3, main="Distribution of 1st Grade Class Type",
xlab="Class Type", col=c("darkblue","red","green"))
#Fitting the model
# Test for variance homogeneity
leveneTest(math1~star1, data = star) #Equal Variacnes
#One-Way ANOVA for STAR1
reg1 = lm(math1~star1, data = star)
summary(reg1)
anova1 = anova(reg1)
anova1
boxplot(star$math1~star$star1)
plot(reg1,2)
plot(reg1, which = c(1,2))
#Plot of boxplot of math scores broken by class type
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
plot(reg1, which = c(1,2))
boxcox(reg1)
#Required Packages
library("AER")
library("ggplot2")
library("car")
library("dplyr")
library("plotly")
library("MASS")
boxcox(reg1)
plot(reg1, which = c(1,2))
mean(subset(star, star1 == "small")[["math1"]])
mean(subset(star, star1 == "regular")[["math1"]])
mean(subset(star, star1 == "regular+aide")[["math1"]])
var(subset(star, star1 == "small")[["math1"]])
var(subset(star, star1 == "regular")[["math1"]])
var(subset(star, star1 == "regular+aide")[["math1"]])
box1 = plot_ly(star, y = ~math1, color = ~star1, type = "box")
box1
length(subset(star, star1 == "small"))
length(star$star1=="small")
table(star$star1)
pieGender = plot_ly(count, labels = ~Var1, values = ~Freq, type = 'pie') %>%
layout(title = "Gender of Participating Studnets")
pieGender
